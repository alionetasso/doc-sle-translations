msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2018-11-24 22:38+0100\n"
"PO-Revision-Date: 2018-09-30 01:17+0200\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: hu\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#. (itstool) path: chapter/title
#: xml/newbie_bash.xml:11
msgid "Shell Basics"
msgstr ""

#. (itstool) path: chapter/para
#: xml/newbie_bash.xml:12
msgid ""
"When working with Linux, you can communicate with the system almost without "
"ever requiring a command line interpreter (the shell). After booting your "
"Linux system, you are usually directed to a graphical user interface that "
"guides you through the login process and the following interactions with the "
"operating system. The graphical user interface in Linux is initially "
"configured during installation and used by desktop environments such as KDE "
"or GNOME."
msgstr ""

#. (itstool) path: chapter/para
#: xml/newbie_bash.xml:21
msgid ""
"Nevertheless, it is useful to have some basic knowledge of working with a "
"shell because you might encounter situations where the graphical user "
"interface is not available. For example, if some problem with the X Window "
"System occurs. If you are not familiar with a shell, you might feel a bit "
"uncomfortable at first when entering commands, but the more you get used to "
"it, the more you will realize that the command line is often the quickest "
"and easiest way to perform some daily tasks."
msgstr ""

#. (itstool) path: chapter/para
#: xml/newbie_bash.xml:30
msgid ""
"For Unix or Linux, several shells are available which differ slightly in "
"behavior and in the commands they accept. The default shell in <phrase role="
"\"productname\"><phrase os=\"osuse\">openSUSE® Leap</phrase><phrase os=\"sles"
"\">SUSE® Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE® Linux "
"Enterprise Desktop</phrase></phrase> is Bash (GNU Bourne-Again Shell)."
msgstr ""

#. (itstool) path: chapter/para
#: xml/newbie_bash.xml:35
msgid ""
"The following sections will guide you through your first steps with the Bash "
"shell and will show you how to complete some basic tasks via the command "
"line. If you are interested in learning more or rather feel like a shell "
"<quote>power user</quote> already, refer to <xref linkend=\"cha.adm.shell\"/"
">."
msgstr ""

#. (itstool) path: sect1/title
#: xml/newbie_bash.xml:43
msgid "Starting a Shell"
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:45
msgid ""
"Basically, there are two different ways to start a shell from the graphical "
"user interface which usually shows after you have booted your computer:"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:53
msgid "you can leave the graphical user interface or"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:58
msgid ""
"you can start a terminal window <emphasis>within</emphasis> the graphical "
"user interface."
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:65
msgid ""
"While the first option is always available, you can only make use of the "
"second option when you are already logged in to a desktop such as KDE or "
"GNOME. Whichever way you choose, there is always a way back and you can "
"switch back and forth between the shell and the graphical user interface."
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:72
msgid ""
"If you want to give it a try, press <keycombo> <keycap function=\"control\"/"
"> <keycap function=\"alt\"/> <keycap>F2</keycap> </keycombo> to leave the "
"graphical user interface. The graphical user interface disappears and you "
"are taken to a shell which prompts you to log in. Type your username and "
"press <keycap function=\"enter\"/>. Then type your password and press "
"<keycap function=\"enter\"/>. The prompt now changes and shows some useful "
"information as in the following example:"
msgstr ""

#. (itstool) path: sect1/screen
#: xml/newbie_bash.xml:83
#, no-wrap
msgid ""
" <co xml:id=\"co.prompt.user\"/>   <co xml:id=\"co.prompt.hostname\"/>   <co xml:id=\"co.prompt.path\"/>\n"
"tux@linux:~&gt;"
msgstr ""

#. (itstool) path: callout/para
#: xml/newbie_bash.xml:88
msgid "Your login."
msgstr ""

#. (itstool) path: callout/para
#: xml/newbie_bash.xml:93
msgid "The hostname of your computer."
msgstr ""

#. (itstool) path: callout/para
#: xml/newbie_bash.xml:98
msgid ""
"Path to the current directory. Directly after login, the current directory "
"usually is your home directory, indicated by the <literal>~</literal> symbol "
"(tilde) ."
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:106
msgid ""
"When you are logged in at a remote computer the information provided by the "
"prompt always shows you which system you are currently working on."
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:111
msgid ""
"When the cursor is located behind this prompt, you can pass commands "
"directly to your computer system. For example, you can now enter "
"<command>ls</command> <option>-l</option> to list the contents of the "
"current directory in a detailed format. If this is enough for your first "
"encounter with the shell and you want to go back to the graphical user "
"interface, you should log out from your shell session first. To do so, type "
"<command>exit</command> and press <keycap function=\"enter\"/>. Then press "
"<keycombo> <keycap function=\"alt\"/> <keycap>F7</keycap> </keycombo> to "
"switch back to the graphical user interface. You will find your desktop and "
"the applications running on it unchanged."
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:125
msgid ""
"When you are already logged in to the GNOME or the KDE desktop and want to "
"start a terminal window within the desktop, press <keycombo> <keycap "
"function=\"alt\"/> <keycap>F2</keycap> </keycombo> and enter "
"<command>konsole</command> (for KDE) or <command>gnome-terminal</command> "
"(for GNOME). This opens a terminal window on your desktop. As you are "
"already logged in to your desktop, the prompt shows information about your "
"system as described above. You can now enter commands and execute tasks just "
"like in any shell which runs parallel to your desktop. To switch to another "
"application on the desktop just click on the corresponding application "
"window or select it from the taskbar of your panel. To close the terminal "
"window press <keycombo> <keycap function=\"alt\"/> <keycap>F4</keycap> </"
"keycombo>."
msgstr ""

#. (itstool) path: sect1/title
#: xml/newbie_bash.xml:141
msgid "Entering Commands"
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:143
msgid ""
"As soon as the prompt appears on the shell it is ready to receive and "
"execute commands. A command can consist of several elements. The first "
"element is the actual command, followed by parameters or options. You can "
"type a command and edit it by using the following keys: <keycap function="
"\"left\"/>, <keycap function=\"right\"/>, <keycap function=\"home\"/>, "
"<keycap function=\"end\"/>, <keycap function=\"backspace\"/> (Backspace), "
"<keycap function=\"delete\"/>, and <keycap function=\"space\"/>. You can "
"correct typing errors or add options. The command is not executed until you "
"press <keycap function=\"enter\"/>."
msgstr ""

#. (itstool) path: important/title
#: xml/newbie_bash.xml:160
msgid "No News Is Good News"
msgstr ""

#. (itstool) path: important/para
#: xml/newbie_bash.xml:161
msgid ""
"The shell is not verbose: in contrast to some graphical user interfaces, it "
"usually does not provide confirmation messages when commands have been "
"executed. Messages only appear in case of problems or errors —or if you "
"explicitly ask for them by executing a command with a certain option."
msgstr ""

#. (itstool) path: important/para
#: xml/newbie_bash.xml:168
msgid ""
"Also keep this in mind for commands to delete objects. Before entering a "
"command like <command>rm</command> (without any option) for removing a file, "
"you should know if you really want to get rid of the object: it will be "
"deleted irretrievably, without confirmation."
msgstr ""

#. (itstool) path: sect2/title
#: xml/newbie_bash.xml:177
msgid "Using Commands without Options"
msgstr ""

#. (itstool) path: sect2/para
#: xml/newbie_bash.xml:178
msgid ""
"In <xref linkend=\"sec.new.bash.accperm.ugo\"/> you already got to know one "
"of the most basic commands: <command>ls</command>, which used to list the "
"contents of a directory. This command can be used with or without options. "
"Entering the plain <command>ls</command> command shows the contents of the "
"current directory:"
msgstr ""

#. (itstool) path: sect2/screen
#: xml/newbie_bash.xml:186
#, no-wrap
msgid ""
"<prompt>tux &gt; </prompt>ls\n"
"bin Desktop Documents public_html tux.txt\n"
"<prompt>tux &gt; </prompt>"
msgstr ""

#. (itstool) path: sect2/para
#: xml/newbie_bash.xml:189
msgid ""
"Files in Linux may have a file extension or a suffix, such as <literal>.txt</"
"literal>, but do not need to have one. This makes it difficult to "
"differentiate between files and folders in this output of the <command>ls</"
"command>. By default, the colors in the Bash shell give you a hint: "
"directories are usually shown in blue, files in black."
msgstr ""

#. (itstool) path: sect2/title
#: xml/newbie_bash.xml:199
msgid "Using Commands with Options"
msgstr ""

#. (itstool) path: sect2/para
#: xml/newbie_bash.xml:200
msgid ""
"A better way to get more details about the contents of a directory is using "
"the <command>ls</command> command with a string of options. Options modify "
"the way a command works so that you can get it to carry out specific tasks. "
"Options are separated from the command with a blank and are usually prefixed "
"with a hyphen. The <command>ls</command> <option>-l</option> command shows "
"the contents of the same directory in full detail (long listing format):"
msgstr ""

#. (itstool) path: sect2/screen
#: xml/newbie_bash.xml:209
#, no-wrap
msgid ""
"<prompt>tux &gt; </prompt>ls -l\n"
"drwxr-xr-x 1 tux users     48 2015-06-23 16:08 bin\n"
"drwx---r-- 1 tux users  53279 2015-06-21 13:16 Desktop\n"
"drwx------ 1 tux users    280 2015-06-23 16:08 Documents\n"
"drwxr-xr-x 1 tux users  70733 2015-06-21 09:35 public_html\n"
"-rw-r--r-- 1 tux users  47896 2015-06-21 09:46 tux.txt\n"
"<prompt>tux &gt; </prompt>"
msgstr ""

#. (itstool) path: sect2/para
#: xml/newbie_bash.xml:216
msgid "This output shows the following information about each object:"
msgstr ""

#. (itstool) path: sect2/screen
#: xml/newbie_bash.xml:219
#, no-wrap
msgid "drwxr-xr-x<co xml:id=\"co.ls_l.perm\"/> 1<co xml:id=\"co.ls_l.a\"/> tux<co xml:id=\"co.ls_l.user\"/> users<co xml:id=\"co.ls_l.group\"/> 48<co xml:id=\"co.ls_l.size\"/> 2006-06-23 16:08<co xml:id=\"co.ls_l.date\"/> bin<co xml:id=\"co.ls_l.name\"/> "
msgstr ""

#. (itstool) path: callout/para
#: xml/newbie_bash.xml:222
msgid ""
"Type of object and access permissions. For further information, refer to "
"<xref linkend=\"sec.new.bash.accperm.ugo\"/>."
msgstr ""

#. (itstool) path: callout/para
#: xml/newbie_bash.xml:229
msgid "Number of hard links to this file."
msgstr ""

#. (itstool) path: callout/para
#: xml/newbie_bash.xml:234
msgid ""
"Owner of the file or directory. For further information, refer to <xref "
"linkend=\"sec.new.bash.accperm.ugo\"/>."
msgstr ""

#. (itstool) path: callout/para
#: xml/newbie_bash.xml:241
msgid ""
"Group assigned to the file or directory. For further information, refer to "
"<xref linkend=\"sec.new.bash.accperm.ugo\"/>."
msgstr ""

#. (itstool) path: callout/para
#: xml/newbie_bash.xml:248
msgid "File size in bytes."
msgstr ""

#. (itstool) path: callout/para
#: xml/newbie_bash.xml:253
msgid "Date and time of the last change."
msgstr ""

#. (itstool) path: callout/para
#: xml/newbie_bash.xml:258
msgid "Name of the object."
msgstr ""

#. (itstool) path: sect2/para
#: xml/newbie_bash.xml:263
msgid ""
"Usually, you can combine several options by prefixing only the first option "
"with a hyphen and then write the others consecutively without a blank. For "
"example, if you want to see all files in a directory in long listing format, "
"you can combine the two options <option>-l</option> and <option>-a</option> "
"(show all files) for the <command>ls</command> command. Executing "
"<command>ls</command> <option>-la</option> shows also hidden files in the "
"directory, indicated by a dot in front (for example, <literal>.hiddenfile</"
"literal>)."
msgstr ""

#. (itstool) path: sect2/para
#: xml/newbie_bash.xml:273
msgid ""
"The list of contents you get with <command>ls</command> is sorted "
"alphabetically by filenames. But like in a graphical file manager, you can "
"also sort the output of <command>ls</command> <option>-l</option> according "
"to various criteria such as date, file extension or file size:"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:281
msgid ""
"For date and time, use <command>ls</command> <option>-lt</option> (displays "
"newest first)."
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:287
msgid ""
"For extensions, use <command>ls</command> <option>-lx</option> (displays "
"files with no extension first)."
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:293
msgid ""
"For file size, use <command>ls</command> <option>-lS</option> (displays "
"largest first)."
msgstr ""

#. (itstool) path: sect2/para
#: xml/newbie_bash.xml:299
msgid ""
"To revert the order of sorting, add <option>-r</option> as an option to your "
"<command>ls</command> command. For example, <command>ls</command> <option>-"
"lr</option> gives you the contents list sorted in reverse alphabetical "
"order, <command>ls</command> <option>-ltr</option> shows the oldest files "
"first. There are lots of other useful options for <command>ls</command>. In "
"the following section you will learn how to investigate them."
msgstr ""

#. (itstool) path: sect2/title
#: xml/newbie_bash.xml:311
msgid "Bash Shortcut Keys"
msgstr ""

#. (itstool) path: sect2/para
#: xml/newbie_bash.xml:312
msgid ""
"After having entered several commands, your shell will begin to fill up with "
"all sorts of commands and the corresponding outputs. In the following table, "
"find some useful shortcut keys for navigating and editing in the shell."
msgstr ""

#. (itstool) path: entry/para
#: xml/newbie_bash.xml:323
msgid "Shortcut Key"
msgstr ""

#. (itstool) path: entry/para
#: xml/newbie_bash.xml:328 xml/newbie_bash.xml:1057
msgid "Function"
msgstr ""

#. (itstool) path: entry/para
#: xml/newbie_bash.xml:337
msgid ""
"<keycombo> <keycap function=\"control\"/> <keycap>L</keycap> </keycombo>"
msgstr ""

#. (itstool) path: entry/para
#: xml/newbie_bash.xml:343
msgid "Clears the screen and moves the current line to the top of the page."
msgstr ""

#. (itstool) path: entry/para
#: xml/newbie_bash.xml:351
msgid ""
"<keycombo> <keycap function=\"control\"/> <keycap>C</keycap> </keycombo>"
msgstr ""

#. (itstool) path: entry/para
#: xml/newbie_bash.xml:357
msgid "Aborts the command which is currently being executed."
msgstr ""

#. (itstool) path: entry/para
#: xml/newbie_bash.xml:370
msgid "Scrolls upwards."
msgstr ""

#. (itstool) path: entry/para
#: xml/newbie_bash.xml:383
msgid "Scrolls downwards."
msgstr ""

#. (itstool) path: entry/para
#: xml/newbie_bash.xml:390
msgid ""
"<keycombo> <keycap function=\"control\"/> <keycap>U</keycap> </keycombo>"
msgstr ""

#. (itstool) path: entry/para
#: xml/newbie_bash.xml:396
msgid "Deletes from cursor position to start of line."
msgstr ""

#. (itstool) path: entry/para
#: xml/newbie_bash.xml:403
msgid ""
"<keycombo> <keycap function=\"control\"/> <keycap>K</keycap> </keycombo>"
msgstr ""

#. (itstool) path: entry/para
#: xml/newbie_bash.xml:409
msgid "Deletes from cursor position to the end of line."
msgstr ""

#. (itstool) path: entry/para
#: xml/newbie_bash.xml:416
msgid ""
"<keycombo> <keycap function=\"control\"/> <keycap>D</keycap> </keycombo>"
msgstr ""

#. (itstool) path: entry/para
#: xml/newbie_bash.xml:422
msgid "Closes the shell session."
msgstr ""

#. (itstool) path: entry/para
#: xml/newbie_bash.xml:429
msgid "<keycap function=\"up\"/>, <keycap function=\"down\"/>"
msgstr ""

#. (itstool) path: entry/para
#: xml/newbie_bash.xml:434
msgid "Browses in the history of executed commands."
msgstr ""

#. (itstool) path: sect1/title
#: xml/newbie_bash.xml:446
msgid "Getting Help"
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:447
msgid ""
"If you remember the name of command but are not sure about the options or "
"the syntax of the command, choose one of the following possibilities:"
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/newbie_bash.xml:453
msgid "<option>--help</option>/<option>-h</option> option"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:455
msgid ""
"If you only want to look up the options of a certain command, try entering "
"the command followed by a space and <option>--help</option>. This <option>--"
"help</option> option exists for many commands. For example, <command>ls</"
"command> <option>--help</option> displays all the options for the "
"<command>ls</command> command."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/newbie_bash.xml:465
msgid "Manual Pages"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:467
msgid ""
"To learn more about the various commands, you can also use the manual pages. "
"Manual pages also give a short description of what the command does. They "
"can be accessed with <command>man</command> followed by the name of the "
"command, for example, <command>man ls</command>."
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:473
msgid ""
"Man pages are displayed directly in the shell. To navigate them, use the "
"following keys:"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:479 xml/newbie_bash.xml:524
msgid ""
"Move up and down with <keycap function=\"pageup\"/> and <keycap function="
"\"pagedown\"/>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:485
msgid ""
"Move between the beginning and the end of a document with <keycap function="
"\"home\"/> and <keycap function=\"end\"/>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:491
msgid "Quit the man page viewer by pressing <keycap>Q</keycap>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:496
msgid ""
"For more information about the <command>man</command> command, use "
"<command>man man</command>."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/newbie_bash.xml:503
msgid "Info Pages"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:505
msgid ""
"Info pages usually provide even more information about commands. To view the "
"info page for a certain command, enter <command>info</command> followed by "
"the name of the command (for example, <command>info ls</command>)."
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:511
msgid ""
"Info pages are displayed directly in the shell. To navigate them, use the "
"following keys:"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:517
msgid ""
"Use <keycap function=\"space\"/> to move forward a section (<emphasis>node</"
"emphasis>). Use <keycap function=\"backspace\"/> to move backward a section."
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:530
msgid "Quit the info page viewer by pressing <keycap>Q</keycap>"
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:538
msgid ""
"Note that man pages and info pages do not exist for all commands. Sometimes "
"both are available (usually for key commands), sometimes only a man page or "
"an info page exists, and sometimes neither of them are available."
msgstr ""

#. (itstool) path: sect1/title
#: xml/newbie_bash.xml:547
msgid "Working with Files and Directories"
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:549
msgid ""
"To address a certain file or directory, you must specify the path leading to "
"that directory or file. There are two ways to specify a path:"
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/newbie_bash.xml:556
msgid "Absolute Path"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:559
msgid ""
"The entire path from the root directory (<filename>/</filename>) to the "
"relevant file or directory. For example, the absolute path to a text file "
"named <filename>file.txt</filename> in your <filename>Documents</filename> "
"directory might be:"
msgstr ""

#. (itstool) path: listitem/screen
#: xml/newbie_bash.xml:565
#, no-wrap
msgid "/home/tux/Documents/file.txt"
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/newbie_bash.xml:569
msgid "Relative Path"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:572
msgid ""
"The path from the current working directory to the relevant file or "
"directory. If your current working directory is <filename>/home/tux</"
"filename>, the relative path <filename>file.txt</filename> in your "
"<filename>Documents</filename> directory is:"
msgstr ""

#. (itstool) path: listitem/screen
#: xml/newbie_bash.xml:579
#, no-wrap
msgid "Documents/file.txt"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:580
msgid ""
"However, if your working directory is <filename>/home/tux/Music</filename> "
"instead, you need to move up a level to <filename>/home/tux</filename> (with "
"<filename>..</filename>) before you can go further down:"
msgstr ""

#. (itstool) path: listitem/screen
#: xml/newbie_bash.xml:586
#, no-wrap
msgid "../Documents/file.txt"
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:591
msgid ""
"Paths contain file names, directories or both, separated by slashes. "
"Absolute paths always start with a slash. Relative paths do not have a slash "
"at the beginning, but can have one or two dots."
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:597
msgid ""
"When entering commands, you can choose either way to specify a path, "
"depending on your preferences or the amount of typing, both will lead to the "
"same result. To change directories, use the <command>cd</command> command "
"and specify the path to the directory."
msgstr ""

#. (itstool) path: note/title
#: xml/newbie_bash.xml:605
msgid "Handling Blanks in Filenames or Directory Names"
msgstr ""

#. (itstool) path: note/para
#: xml/newbie_bash.xml:606
msgid ""
"If a filename or the name of a directory contains a space, either escape the "
"space using a back slash (<literal>\\</literal>) in front of the blank or "
"enclose the filename in single quotes. Otherwise Bash interprets a filename "
"like <filename>My Documents</filename> as the names of two files or "
"directories, <filename>My</filename> and <filename>Documents</filename> in "
"this case."
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:621
msgid ""
"When specifying paths, the following <quote>shortcuts</quote> can save you a "
"lot of typing:"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:628
msgid ""
"The tilde symbol (<literal>~</literal>) is a shortcut for home directories. "
"For example, to list the contents of your home directory, use <command>ls</"
"command> <option>~</option>. To list the contents of another user's home "
"directory, enter <command>ls</command> <option>~<replaceable>USERNAME</"
"replaceable> </option> (or course, this will only work if you have "
"permission to view the contents, see <xref linkend=\"sec.new.bash.accperm\"/"
">). For example, entering <command>ls ~tux</command> would list the contents "
"of the home directory of a user named <systemitem class=\"username\">tux</"
"systemitem>. You can use the tilde symbol as shortcut for home directories "
"also if you are working in a network environment where your home directory "
"may not be called <filename>/home</filename> but can be mapped to any "
"directory in the file system."
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:643
msgid ""
"From anywhere in the file system, you can reach your home directory by "
"entering <command>cd ~</command> or by simply entering <command>cd</command> "
"without any options."
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:650
msgid ""
"When using relative paths, refer to the current directory with a dot "
"(<literal>.</literal>). This is mainly useful for commands such as "
"<command>cp</command> or <command>mv</command> by which you can copy or move "
"files and directories."
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:658
msgid ""
"The next higher level in the tree is represented by two dots (<literal>..</"
"literal>). In order to switch to the parent directory of your current "
"directory, enter <command>cd ..</command>, to go up two levels from the "
"current directory enter <command>cd ../..</command> etc."
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:668
msgid ""
"To apply your knowledge, find some examples below. They address basic tasks "
"you may want to execute with files or folders using Bash."
msgstr ""

#. (itstool) path: sect2/title
#: xml/newbie_bash.xml:675
msgid "Examples for Working with Files and Directories"
msgstr ""

#. (itstool) path: sect2/para
#: xml/newbie_bash.xml:676
msgid ""
"Suppose you want to copy a file located somewhere in your home directory to "
"a subdirectory of <filename>/tmp</filename> that you need to create first."
msgstr ""

#. (itstool) path: procedure/title
#: xml/newbie_bash.xml:682
msgid "Creating and Changing Directories"
msgstr ""

#. (itstool) path: procedure/para
#: xml/newbie_bash.xml:683
msgid ""
"From your home directory create a subdirectory in <filename>/tmp</filename>:"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:688 xml/newbie_bash.xml:761
msgid "Enter"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:691
#, no-wrap
msgid "<prompt>tux &gt; </prompt>mkdir /tmp/test"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:692
msgid ""
"<command>mkdir</command> stands for <quote>make directory</quote>. This "
"command creates a new directory named <filename>test</filename> in the "
"<filename>/tmp</filename> directory. In this case, you are using an absolute "
"path to create the <filename>test</filename> directory."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:701
msgid "To check what happened, now enter"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:704
#, no-wrap
msgid "<prompt>tux &gt; </prompt>ls -l /tmp"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:705
msgid ""
"The new directory <filename>test</filename> should appear in the list of "
"contents of the <filename>/tmp</filename> directory."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:711
msgid "Switch to the newly created directory with"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:714
#, no-wrap
msgid "<prompt>tux &gt; </prompt>cd /tmp/test"
msgstr ""

#. (itstool) path: procedure/title
#: xml/newbie_bash.xml:718
msgid "Creating and Copying Files"
msgstr ""

#. (itstool) path: procedure/para
#: xml/newbie_bash.xml:719
msgid ""
"Now create a new file in a subdirectory of your home directory and copy it "
"to <filename>/tmp/test</filename>. Use a relative path for this task."
msgstr ""

#. (itstool) path: important/title
#: xml/newbie_bash.xml:725
msgid "Overwriting of Existing Files"
msgstr ""

#. (itstool) path: important/para
#: xml/newbie_bash.xml:726
msgid ""
"Before copying, moving or renaming a file, check if your target directory "
"already contains a file with the same name. If yes, consider changing one of "
"the filenames or use <command>cp</command> or <command>mv</command> with "
"options like <option>-i</option>, which will prompt before overwriting an "
"existing file. Otherwise Bash will overwrite the existing file without "
"confirmation."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:736
msgid "To list the contents of your home directory, enter"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:739
#, no-wrap
msgid "<prompt>tux &gt; </prompt>ls -l ~"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:740
msgid ""
"It should contain a subdirectory called <filename>Documents</filename> by "
"default. If not, create this subdirectory with the <command>mkdir</command> "
"command you already know:"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:745
#, no-wrap
msgid "<prompt>tux &gt; </prompt>mkdir ~/Documents"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:748
msgid ""
"To create a new, empty file named <filename>myfile.txt</filename> in the "
"<filename>Documents</filename> directory, enter"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:752
#, no-wrap
msgid "<prompt>tux &gt; </prompt>touch ~/Documents/myfile.txt"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:753
msgid ""
"Usually, the <command>touch</command> command updates the modification and "
"access date for an existing file. If you use <command>touch</command> with a "
"filename which does not exist in your target directory, it creates a new "
"file."
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:764
#, no-wrap
msgid "<prompt>tux &gt; </prompt>ls -l ~/Documents"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:765
msgid "The new file should appear in the list of contents."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:770
msgid "To copy the newly created file, enter"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:773
#, no-wrap
msgid "<prompt>tux &gt; </prompt>cp ~/Documents/myfile.txt ."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:774
msgid "Do not forget the dot at the end."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:777
msgid ""
"This command tells Bash to go to your home directory and to copy <filename> "
"myfile.txt</filename> from the <filename>Documents</filename> subdirectory "
"to the current directory, <filename>/tmp/test</filename>, without changing "
"the name of the file."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:785
msgid "Check the result by entering"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:788 xml/newbie_bash.xml:812 xml/newbie_bash.xml:1274
#, no-wrap
msgid "<prompt>tux &gt; </prompt>ls -l"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:789
msgid ""
"The file <filename>myfile.txt </filename> should appear in the list of "
"contents for <filename>/tmp/test</filename>."
msgstr ""

#. (itstool) path: procedure/title
#: xml/newbie_bash.xml:796
msgid "Renaming and Removing Files or Directories"
msgstr ""

#. (itstool) path: procedure/para
#: xml/newbie_bash.xml:797
msgid ""
"Now suppose you want to rename <filename>myfile.txt </filename> into "
"<filename>tuxfile.txt</filename>. Finally you decide to remove the renamed "
"file and the <filename>test</filename> subdirectory."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:803
msgid "To rename the file, enter"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:806
#, no-wrap
msgid "<prompt>tux &gt; </prompt>mv myfile.txt tuxfile.txt"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:809
msgid "To check what happened, enter"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:813
msgid ""
"Instead of <filename>myfile.txt</filename>, <filename>tuxfile.txt</filename> "
"should appear in the list of contents."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:818
msgid ""
"<command>mv</command> stands for <literal>move</literal> and is used with "
"two options: the first option specifies the source, the second option "
"specifies the target of the operation. You can use <command>mv</command> "
"either"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:826
msgid "to rename a file or a directory,"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:831
msgid "to move a file or directory to a new location or"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:836
msgid "to do both in one step."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:843
msgid ""
"Coming to the conclusion that you do not need the file any longer, you can "
"delete it by entering"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:847
#, no-wrap
msgid "<prompt>tux &gt; </prompt>rm tuxfile.txt "
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:848
msgid "Bash deletes the file without any confirmation."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:853
msgid "Move up one level with <command>cd ..</command> and check with"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:856
#, no-wrap
msgid "<prompt>tux &gt; </prompt>ls -l test"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:857
msgid "if the <filename>test</filename> directory is empty now."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:862
msgid ""
"If yes, you can remove the <filename>test</filename> directory by entering"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:866
#, no-wrap
msgid "<prompt>tux &gt; </prompt>rmdir test"
msgstr ""

#. (itstool) path: sect1/title
#: xml/newbie_bash.xml:872
msgid "Becoming Root"
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:874
msgid ""
"<systemitem class=\"username\">root</systemitem>, also called the superuser, "
"has privileges which authorize them to access all parts of the system and to "
"execute administrative tasks. They have the unrestricted capacity to make "
"changes to the system and they have unlimited access to all files. "
"Therefore, performing some administrative tasks or running certain programs "
"such as YaST requires <systemitem class=\"username\">root</systemitem> "
"permissions."
msgstr ""

#. (itstool) path: sect2/title
#: xml/newbie_bash.xml:884
msgid "Using <command>su</command>"
msgstr ""

#. (itstool) path: sect2/para
#: xml/newbie_bash.xml:885
msgid ""
"In order to temporarily become <systemitem class=\"username\">root</"
"systemitem> in a shell, proceed as follows:"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:891
msgid ""
"Enter <command>su</command>. You are prompted for the <systemitem class="
"\"username\">root</systemitem> password."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:897
msgid ""
"Enter the password. If you mistyped the <systemitem class=\"username\">root</"
"systemitem> password, the shell displays a message. In this case, you have "
"to re-enter <command>su</command> before retyping the password. If your "
"password is correct, a hash symbol <literal>#</literal> appears at the end "
"of the prompt, signaling that you are acting as <systemitem class=\"username"
"\">root</systemitem> now."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:906
msgid ""
"Execute your task. For example, transfer ownership of a file to a new user "
"which only <systemitem class=\"username\">root</systemitem> is allowed to do:"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:910
#, no-wrap
msgid "<prompt>tux &gt; </prompt>chown <systemitem class=\"username\">wilber</systemitem> kde_quick.xml"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:913
msgid ""
"After having completed your tasks as <systemitem class=\"username\">root</"
"systemitem>, switch back to your normal user account. To do so, enter"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:917
#, no-wrap
msgid "<prompt>tux &gt; </prompt>exit"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:918
msgid ""
"The hash symbol disappears and you are acting as <quote>normal</quote> user "
"again."
msgstr ""

#. (itstool) path: sect2/title
#: xml/newbie_bash.xml:932
msgid "Using <command>sudo</command>"
msgstr ""

#. (itstool) path: sect2/para
#: xml/newbie_bash.xml:933
msgid ""
"Alternatively, you can also use <command>sudo</command> (superuser "
"<quote>do</quote>) to execute some tasks which normally are for <systemitem "
"class=\"username\">root</systemitem>s only. With sudo, administrators can "
"grant certain users <systemitem class=\"username\">root</systemitem> "
"privileges for some commands. Depending on the system configuration, users "
"can then run <systemitem class=\"username\">root</systemitem> commands by "
"entering their normal password only. Due to a timestamp function, users are "
"only granted a <quote>ticket</quote> for a restricted period of time after "
"having entered their password. The ticket usually expires after a few "
"minutes. In openSUSE, sudo requires the <systemitem class=\"username\">root</"
"systemitem> password by default (if not configured otherwise by your system "
"administrator)."
msgstr ""

#. (itstool) path: sect2/para
#: xml/newbie_bash.xml:945
msgid ""
"For users, sudo is convenient as it prevents you from switching accounts "
"twice (to <systemitem class=\"username\">root</systemitem> and back again). "
"To change the ownership of a file using sudo, only one command is necessary "
"instead of three:"
msgstr ""

#. (itstool) path: sect2/screen
#: xml/newbie_bash.xml:950
#, no-wrap
msgid "<prompt>tux &gt; </prompt><command>sudo</command> chown <systemitem class=\"username\">wilber</systemitem> kde_quick.xml"
msgstr ""

#. (itstool) path: sect2/para
#: xml/newbie_bash.xml:951
msgid ""
"After you have entered the password which you are prompted for, the command "
"is executed. If you enter a second <systemitem class=\"username\">root</"
"systemitem> command shortly after that, you are not prompted for the "
"password again, because your ticket is still valid. After a certain amount "
"of time, the ticket automatically expires and the password is required "
"again. This also prevents unauthorized persons from gaining <systemitem "
"class=\"username\">root</systemitem> privileges in case a user forgets to "
"switch back to their normal user account again and leaves a <systemitem "
"class=\"username\">root</systemitem> shell open."
msgstr ""

#. (itstool) path: sect1/title
#: xml/newbie_bash.xml:967
msgid "Time-Saving Features of Bash"
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:969
msgid ""
"Entering commands in Bash can involve a lot of typing. This section "
"introduces some features that can save you both time and typing."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/newbie_bash.xml:976
msgid "History"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:978
msgid ""
"By default, Bash <quote>remembers</quote> commands you have entered. This "
"feature is called <emphasis>history</emphasis>. You can browse through "
"commands that have been entered before, select one you want to repeat and "
"then execute it again. To do so, press <keycap function=\"up\"/> repeatedly "
"until the desired command appears at the prompt. To move forward through the "
"list of previously entered commands, press <keycap function=\"down\"/>. For "
"easier repetition of a certain command from Bash history, just type the "
"first letter of the command you want to repeat and press <keycap function="
"\"pageup\"/>."
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:990
msgid ""
"You can now edit the selected command (for example, change the name of a "
"file or a path), before you execute the command by pressing <keycap function="
"\"enter\"/>. To edit the command line, move the cursor to the desired "
"position using the arrow keys and start typing."
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:996
msgid ""
"You can also search for a certain command in the history. Press <keycombo> "
"<keycap function=\"control\"/> <keycap>R</keycap> </keycombo> to start an "
"incremental search function. showing the following prompt:"
msgstr ""

#. (itstool) path: listitem/screen
#: xml/newbie_bash.xml:1001
#, no-wrap
msgid "<prompt>tux &gt; </prompt>(reverse-i-search)`': "
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:1002
msgid ""
"Just type one or several letters from the command you are searching for. "
"Each character you enter narrows down the search. The corresponding search "
"result is shown on the right side of the colon whereas your input appears on "
"the left of the colon. To accept a search result, press <keycap function="
"\"escape\"/>. The prompt now changes to its normal appearance and shows the "
"command you chose. You can now edit the command or directly execute it by "
"pressing <keycap function=\"enter\"/>."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/newbie_bash.xml:1015
msgid "Completion"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:1017
msgid ""
"Completing a filename or directory name to its full length after typing its "
"first letters is another helpful feature of Bash. To do so, type the first "
"letters then press <keycap function=\"tab\"/> (Tabulator). If the filename "
"or path can be uniquely identified, it is completed at once and the cursor "
"moves to the end of the filename. You can then enter the next option of the "
"command, if necessary. If the filename or path cannot be uniquely identified "
"(because there are several filenames starting with the same letters), the "
"filename or path is only completed up to the point where it becomes "
"ambiguous again. You can then obtain a list of them by pressing <keycap "
"function=\"tab\"/> a second time. After this, you can enter the next letters "
"of the file or path then try completion again by pressing <keycap function="
"\"tab\"/>. When completing filenames and paths with <keycap function=\"tab\"/"
">, you can simultaneously check whether the file or path you want to enter "
"really exists (and you can be sure of getting the spelling right)."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/newbie_bash.xml:1040
msgid "Wild Cards"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:1042
msgid ""
"You can replace one or more characters in a filename with a wild card for "
"pathname expansion. Wild cards are characters that can stand for other "
"characters. There are three different types of these in Bash:"
msgstr ""

#. (itstool) path: entry/para
#: xml/newbie_bash.xml:1052
msgid "Wild Card"
msgstr ""

#. (itstool) path: entry/para
#: xml/newbie_bash.xml:1064
msgid "<literal>?</literal>"
msgstr ""

#. (itstool) path: entry/para
#: xml/newbie_bash.xml:1069
msgid "Matches exactly one arbitrary character"
msgstr ""

#. (itstool) path: entry/para
#: xml/newbie_bash.xml:1076
msgid "<literal>*</literal>"
msgstr ""

#. (itstool) path: entry/para
#: xml/newbie_bash.xml:1081
msgid "Matches any number of characters"
msgstr ""

#. (itstool) path: entry/para
#: xml/newbie_bash.xml:1088
msgid "<literal>[<replaceable>SET</replaceable>]</literal>"
msgstr ""

#. (itstool) path: entry/para
#: xml/newbie_bash.xml:1093
msgid ""
"Matches one of the characters from the group specified inside the square "
"brackets, which is represented here by the string <replaceable>SET</"
"replaceable>."
msgstr ""

#. (itstool) path: sect2/title
#: xml/newbie_bash.xml:1108
msgid "Examples For Using History, Completion and Wildcards"
msgstr ""

#. (itstool) path: sect2/para
#: xml/newbie_bash.xml:1109
msgid ""
"The following examples illustrate how to make use of these convenient "
"features of Bash."
msgstr ""

#. (itstool) path: procedure/title
#: xml/newbie_bash.xml:1114
msgid "Using History and Completion"
msgstr ""

#. (itstool) path: procedure/para
#: xml/newbie_bash.xml:1115
msgid ""
"If you already did the example <xref linkend=\"sec.new.bash.fildir.ex\"/>, "
"your shell buffer should be filled with commands which you can retrieve "
"using the history function."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1121
msgid ""
"Press <keycap function=\"up\"/> repeatedly until <command>cd ~</command> "
"appears."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1127
msgid ""
"Press <keycap function=\"enter\"/> to execute the command and to switch to "
"your home directory."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1131
msgid ""
"By default, your home directory contains two subdirectories starting with "
"the same letter, <filename>Documents</filename> and <filename>Desktop</"
"filename>."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1138
msgid "Type <command>cd D</command> and press <keycap function=\"tab\"/>."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1141
msgid ""
"Nothing happens since Bash cannot identify to which one of the "
"subdirectories you want to change."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1147
msgid ""
"Press <keycap function=\"tab\"/> again to see the list of possible choices:"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:1151
#, no-wrap
msgid ""
"<prompt>tux &gt; </prompt><command>cd D</command>\n"
"Desktop/ Documents/ Downloads/\n"
"<prompt>tux &gt; </prompt><command>cd D</command>"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1156
msgid ""
"The prompt still shows your initial input. Type the next character of the "
"subdirectory you want to go to and press <keycap function=\"tab\"/> again."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1161
msgid "Bash now completes the path."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1166
msgid "You can now execute the command with <keycap function=\"enter\"/>."
msgstr ""

#. (itstool) path: procedure/title
#: xml/newbie_bash.xml:1172
msgid "Using Wildcards"
msgstr ""

#. (itstool) path: procedure/para
#: xml/newbie_bash.xml:1173
msgid ""
"Now suppose that your home directory contains several files with various "
"file extensions. It also holds several versions of one file which you saved "
"under different filenames <filename>myfile1.txt</filename>, "
"<filename>myfile2.txt</filename> etc. You want to search for certain files "
"according to their properties."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1181
msgid "First, create some test files in your home directory:"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1186
msgid ""
"Use the <command>touch</command> command to create several (empty) files "
"with different file extensions, for example <filename>.pdf</filename>, "
"<filename>.xml</filename> and <filename>.jpg</filename>."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1192
msgid ""
"You can do this consecutively (do not forget to use the Bash history "
"function) or with only one <command>touch</command> command: simply add "
"several filenames separated by a space."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1199
msgid ""
"Create at least two files that have the same file extension, for example "
"<filename>.html</filename>."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1205
msgid "To create several <quote>versions</quote> of one file, enter"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:1208
#, no-wrap
msgid "<prompt>tux &gt; </prompt>touch myfile{1..5}.txt"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1209
msgid ""
"This command creates five consecutively numbered files: <filename>myfile1."
"txt</filename>, …, <filename>myfile5.txt</filename>."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1216
msgid "List the contents of the directory. It should look similar to this:"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:1220
#, no-wrap
msgid ""
"<prompt>tux &gt; </prompt>ls -l\n"
"-rw-r--r-- 1 tux users   0 2006-07-14 13:34 foo.xml\n"
"-rw-r--r-- 1 tux users   0 2006-07-14 13:47 home.html\n"
"-rw-r--r-- 1 tux users   0 2006-07-14 13:47 index.html\n"
"-rw-r--r-- 1 tux users   0 2006-07-14 13:47 toc.html\n"
"-rw-r--r-- 1 tux users   0 2006-07-14 13:34 manual.pdf\n"
"-rw-r--r-- 1 tux users   0 2006-07-14 13:49 myfile1.txt\n"
"-rw-r--r-- 1 tux users   0 2006-07-14 13:49 myfile2.txt\n"
"-rw-r--r-- 1 tux users   0 2006-07-14 13:49 myfile3.txt\n"
"-rw-r--r-- 1 tux users   0 2006-07-14 13:49 myfile4.txt\n"
"-rw-r--r-- 1 tux users   0 2006-07-14 13:49 myfile5.txt\n"
"-rw-r--r-- 1 tux users   0 2006-07-14 13:32 tux.png"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1236
msgid ""
"With wild cards, select certain subsets of the files according to various "
"criteria:"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1242
msgid "To list all files with the <filename>.html</filename> extension, enter"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:1246
#, no-wrap
msgid "<prompt>tux &gt; </prompt>ls -l *.html"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1249
msgid ""
"To list all <quote>versions</quote> of <filename>myfile.txt</filename>, enter"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:1253
#, no-wrap
msgid "<prompt>tux &gt; </prompt>ls -l myfile?.txt"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1254
msgid ""
"Note that you can only use the <literal>?</literal> wild card here because "
"the numbering of the files is single-digit. As soon as you have a file named "
"<filename>myfile10.txt</filename> you must to use the <literal>*</literal> "
"wild card to view all versions of <filename>myfile.txt</filename> (or add "
"another question mark, so your string looks like <command>myfile??.txt</"
"command>)."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1264
msgid ""
"To remove, for example, version 1-3 and version 5 of <filename>myfile.txt</"
"filename>, enter"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:1268
#, no-wrap
msgid "<prompt>tux &gt; </prompt>rm myfile[1-3,5].txt"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1271
msgid "Check the result with"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1275
msgid ""
"Of all <filename>myfile.txt</filename> versions only <filename>myfile4.txt</"
"filename> should be left."
msgstr ""

#. (itstool) path: sect2/para
#: xml/newbie_bash.xml:1283
msgid ""
"You can also combine several wild cards in one command. In the example "
"above, <command>rm myfile[1-3,5].*</command> would lead to the same result "
"as <command>rm myfile[1-3,5].txt</command> because there are only files with "
"the extension <filename>.txt</filename> available."
msgstr ""

#. (itstool) path: note/title
#: xml/newbie_bash.xml:1290
msgid "Using Wildcards in <command>rm</command> Commands"
msgstr ""

#. (itstool) path: note/para
#: xml/newbie_bash.xml:1291
msgid ""
"Wildcards in a <command>rm </command> command can be very useful but also "
"dangerous: you might delete more files from your directory than intended. To "
"see which files would be affected by the <command>rm</command>, run your "
"wildcard string with <command>ls</command> instead of <command>rm</command> "
"first."
msgstr ""

#. (itstool) path: sect1/title
#: xml/newbie_bash.xml:1302
msgid "Editing Texts"
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:1304
msgid ""
"In order to edit files from the command line, you will need to know the vi "
"editor. vi is a default editor which can be found on nearly every UNIX/Linux "
"system. It can run several operating modes in which the keys you press have "
"different functions. This does not make it very easy for beginners, but you "
"should know at least the most basic operations with vi. There may be "
"situations where no other editor than vi is available."
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:1313
msgid "Basically, vi makes use of three operating modes:"
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/newbie_bash.xml:1319
msgid "<emphasis>command</emphasis> mode"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:1321
msgid ""
"In this mode, vi accepts certain key combinations as commands. Simple tasks "
"such as searching words or deleting a line can be executed."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/newbie_bash.xml:1328
msgid "<emphasis>insert</emphasis> mode"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:1330
msgid "In this mode, you can write normal text."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/newbie_bash.xml:1336
msgid "<emphasis>extended</emphasis> mode"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:1338
msgid ""
"In this mode, also known as colon mode (as you have to enter a colon to "
"switch to this mode), vi can execute also more complex tasks such as "
"searching and replacing text."
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:1347
msgid ""
"In the following (very simple) example, you will learn how to open and edit "
"a file with vi, how to save your changes and quit vi."
msgstr ""

#. (itstool) path: sect2/title
#: xml/newbie_bash.xml:1353
msgid "Example: Editing with vi"
msgstr ""

#. (itstool) path: note/title
#: xml/newbie_bash.xml:1356
msgid "Display of Keys"
msgstr ""

#. (itstool) path: note/para
#: xml/newbie_bash.xml:1357
msgid ""
"In the following, find several commands that you can enter in vi by just "
"pressing keys. These appear in uppercase as on a keyboard. If you need to "
"enter a key in uppercase, this is stated explicitly by showing a key "
"combination including the <keycap function=\"shift\"/> key."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1365
msgid "To create and open a new file with vi, enter"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:1368
#, no-wrap
msgid "<prompt>tux &gt; </prompt>vi textfile.txt"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1369
msgid ""
"By default, vi opens in <emphasis>command</emphasis> mode in which you "
"cannot enter text."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1375
msgid ""
"Press <keycap>I</keycap> to switch to insert mode. The bottom line changes "
"and indicates that you now can insert text."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1381
msgid ""
"Write some sentences. If you want to insert a new line, first press <keycap "
"function=\"escape\"/> to switch back to command mode. Press <keycap>O</"
"keycap> to insert a new line and to switch to insert mode again."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1390
msgid ""
"In the insert mode, you can edit the text with the arrow keys and with "
"<keycap function=\"delete\"/>."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1397
msgid ""
"To leave vi, press <keycap function=\"escape\"/> to switch to command mode "
"again. Then press <keycap>:</keycap> which takes you to the extended mode. "
"The bottom line now shows a colon."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1404
msgid ""
"To leave vi and save your changes, type <command>wq</command> (<literal>w</"
"literal> for <literal>write</literal>; <literal>q</literal> for "
"<literal>quit</literal>) and press <keycap function=\"enter\"/>. If you want "
"to save the file under a different name, type <command>w "
"<replaceable>FILENAME</replaceable></command> and press <keycap function="
"\"enter\"/>."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1414
msgid ""
"To leave vi without saving, type <command>q!</command> instead and press "
"<keycap function=\"enter\"/>."
msgstr ""

#. (itstool) path: sect1/title
#: xml/newbie_bash.xml:1424
msgid "Searching for Files or Contents"
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:1426
msgid ""
"Bash offers you several commands to search for files and to search for the "
"contents of files:"
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/newbie_bash.xml:1433
msgid "<command>find</command>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:1436
msgid ""
"With <command>find</command>, search for a file in a given directory. The "
"first argument specifies the directory in which to start the search. The "
"option <option>-name</option> must be followed by a search string, which may "
"also include wild cards. Unlike <command>locate</command>, which uses a "
"database, <command>find</command> scans the actual directory."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/newbie_bash.xml:1447
msgid "<command>grep</command>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:1450
msgid ""
"The <command>grep</command> command finds a specific search string in the "
"specified text files. If the search string is found, the command displays "
"the line in which <literal>searchstring</literal> was found, along with the "
"filename. If desired, use wild cards to specify filenames."
msgstr ""

#. (itstool) path: sect2/title
#: xml/newbie_bash.xml:1462
msgid "Examples for Searching"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:1465
msgid ""
"To search your home directory for all occurrences of filenames that contain "
"the file extension <filename>.txt</filename>, use:"
msgstr ""

#. (itstool) path: listitem/screen
#: xml/newbie_bash.xml:1469
#, no-wrap
msgid "<prompt>tux &gt; </prompt>find ~ -name '*.txt' -print"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:1472
msgid ""
"To search a directory (in this case, your home directory) for all "
"occurrences of files which contain, for example, the word <literal>music</"
"literal>, use:"
msgstr ""

#. (itstool) path: listitem/screen
#: xml/newbie_bash.xml:1477
#, no-wrap
msgid "<prompt>tux &gt; </prompt>grep music ~/*"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:1478
msgid ""
"<command>grep</command> is case-sensitive by default. Hence, with the "
"command above you will not find any files containing <literal>Music</"
"literal>.To ignore case, use the <option>-i</option> option."
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:1486
msgid ""
"To use a search string which consists of more than one word, enclose the "
"string in double quotation marks, for example:"
msgstr ""

#. (itstool) path: listitem/screen
#: xml/newbie_bash.xml:1490
#, no-wrap
msgid "<prompt>tux &gt; </prompt>grep \"music is great\" ~/*"
msgstr ""

#. (itstool) path: sect1/title
#: xml/newbie_bash.xml:1496
msgid "Viewing Text Files"
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:1498
msgid ""
"When searching for the contents of a file with <command>grep</command>, the "
"output gives you the line in which the <literal>searchstring</literal> was "
"found along with the filename. Often this contextual information is still "
"not enough information to decide whether you want to open and edit this "
"file. Bash offers you several commands to have a quick look at the contents "
"of a text file directly in the shell, without opening an editor."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/newbie_bash.xml:1510
msgid "<command>head</command>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:1512
msgid ""
"With <command>head</command> you can view the first lines of a text file. If "
"you do not specify the command any further, <command>head</command> shows "
"the first 10 lines of a text file."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/newbie_bash.xml:1520
msgid "<command>tail</command>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:1522
msgid ""
"The <command>tail</command> command is the counterpart of <command>head</"
"command>. If you use <command>tail</command> without any further options it "
"displays the last 10 lines of a text file. This can be very useful to view "
"log files of your system, where the most recent messages or log entries are "
"usually found at the end of the file."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/newbie_bash.xml:1533
msgid "<command>less</command>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:1535
msgid ""
"With <command>less</command>, display the whole contents of a text file. To "
"move up and down half a page use <keycap function=\"pageup\"/> and <keycap "
"function=\"pagedown\"/>. Use <keycap function=\"space\"/> to scroll down one "
"page. <keycap function=\"home\"/> takes you to the beginning, and <keycap "
"function=\"end\"/> to the end of the document. To end the viewing mode, "
"press <keycap>Q</keycap>."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/newbie_bash.xml:1546
msgid "<command>more</command>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:1548
msgid ""
"Instead of <literal>less</literal>, you can also use the older program "
"<literal>more</literal>. It has basically the same function—however, it is "
"less convenient because it does not allow you to scroll backward. Use "
"<keycap function=\"space\"/> to move forward. When you reach the end of the "
"document, the viewer closes automatically."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/newbie_bash.xml:1559
msgid "<command>cat</command>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:1561
msgid ""
"The <command>cat</command> command displays the contents of a file, printing "
"the entire contents to the screen without interruption. As <command>cat</"
"command> does not allow you to scroll it is not very useful as viewer but it "
"is rather often used in combination with other commands."
msgstr ""

#. (itstool) path: sect1/title
#: xml/newbie_bash.xml:1573
msgid "Redirection and Pipes"
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:1574
msgid ""
"Sometimes it would be useful if you could write the output of a command to a "
"file for further editing or if you could combine several commands, using the "
"output of one command as the input for the next one. The shell offers this "
"function by means of redirection or pipes."
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:1581
msgid ""
"Normally, the standard output in the shell is your screen (or an open shell "
"window) and the standard input is the keyboard. With certain symbols you can "
"redirect the input or the output to another object, such as a file or "
"another command."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/newbie_bash.xml:1590
msgid "Redirection"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:1592
msgid ""
"With <literal>&gt;</literal> you can forward the output of a command to a "
"file (output redirection), with <literal>&lt;</literal> you can use a file "
"as input for a command (input redirection)."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/newbie_bash.xml:1600
msgid "Pipe"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:1602
msgid ""
"By means of a pipe symbol <literal>|</literal> you can also redirect the "
"output: with a pipe, you can combine several commands, using the output of "
"one command as input for the next command. In contrast to the other "
"redirection symbols &gt; and &lt;, the use of the pipe is not constrained to "
"files."
msgstr ""

#. (itstool) path: sect2/title
#: xml/newbie_bash.xml:1614
msgid "Examples for Redirection and Pipe"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1617
msgid ""
"To write the output of a command like <command>ls</command> to a file, enter"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:1621
#, no-wrap
msgid "<prompt>tux &gt; </prompt>ls -l &gt; filelist.txt"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1622
msgid ""
"This creates a file named <filename>filelist.txt</filename> that contains "
"the list of contents of your current directory as generated by the "
"<command>ls</command> command."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1627
msgid ""
"However, if a file named <filename>filelist.txt</filename> already exists, "
"this command overwrites the existing file. To prevent this, use <literal>&gt;"
"&gt;</literal> instead of &gt;. Entering"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:1632
#, no-wrap
msgid "<prompt>tux &gt; </prompt>ls -l &gt;&gt; filelist.txt "
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1633
msgid ""
"simply appends the output of the <command>ls</command> command to an already "
"existing file named <filename>filelist.txt</filename>. If the file does not "
"exist, it is created."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1640
msgid ""
"Redirections also works the other way round. Instead of using the standard "
"input from the keyboard for a command, you can use a file as input:"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:1645
#, no-wrap
msgid "<prompt>tux &gt; </prompt>sort &lt; filelist.txt"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1646
msgid ""
"This will force the <command>sort</command> command to get its input from "
"the contents of <filename>filelist.txt</filename>. The result is shown on "
"the screen. Of course, you can also write the result into another file, "
"using a combination of redirections:"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:1652
#, no-wrap
msgid "<prompt>tux &gt; </prompt>sort &lt; filelist.txt &gt; sorted_filelist.txt"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1655
msgid ""
"If a command generates a lengthy output, like <command>ls</command> <option>-"
"l</option> may do, it may be useful to pipe the output to a viewer like "
"<literal>less</literal> to be able to scroll through the pages. To do so, "
"enter"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:1661
#, no-wrap
msgid "<prompt>tux &gt; </prompt>ls -l | less"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1662
msgid ""
"The list of contents of the current directory is shown in <literal>less</"
"literal>."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1666
msgid ""
"The pipe is also often used in combination with the <command>grep</command> "
"command in order to search for a certain string in the output of another "
"command. For example, if you want to view a list of files in a directory "
"which are owned by the user <systemitem class=\"username\">tux</systemitem>, "
"enter"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:1673
#, no-wrap
msgid "<prompt>tux &gt; </prompt>ls -l | grep tux"
msgstr ""

#. (itstool) path: sect1/title
#: xml/newbie_bash.xml:1679
msgid "Starting Programs and Handling Processes"
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:1681
msgid ""
"As you have seen in <xref linkend=\"sec.new.bash.edit\"/>, programs can be "
"started from the shell. Applications with a graphical user interface need "
"the X Window System and can only be started from a terminal window within a "
"graphical user interface. For example, if you want to open a file named "
"<filename>vacation.pdf</filename> in your home directory from a terminal "
"window in KDE or GNOME, simply run <command>okular ~/vacation.pdf</command> "
"(or <command>evince ~/vacation.pdf</command>) to start a PDF viewer "
"displaying your file."
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:1693
msgid ""
"When looking at the terminal window again you will realize that the command "
"line is blocked as long as the PDF viewer is open, meaning that your prompt "
"is not available. To change this, press <keycombo> <keycap function=\"control"
"\"/> <keycap>Z</keycap> </keycombo> to suspend the process and enter "
"<command>bg</command> to send the process to the background."
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:1701
msgid ""
"Now you can still have a look at <filename>vacation.pdf</filename> while "
"your prompt is available for further commands. An easier way to achieve this "
"is by sending a process to the background directly when starting it. To do "
"so, add an ampersand at the end of the command:"
msgstr ""

#. (itstool) path: sect1/screen
#: xml/newbie_bash.xml:1708
#, no-wrap
msgid "<prompt>tux &gt; </prompt>okular ~/vacation.pdf &amp;"
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:1710
msgid ""
"If you have started several background processes (also named jobs) from the "
"same shell, the <command>jobs</command> command gives you an overview of the "
"jobs. It also shows the job number in brackets and their status:"
msgstr ""

#. (itstool) path: sect1/screen
#: xml/newbie_bash.xml:1717
#, no-wrap
msgid ""
"<prompt>tux &gt; </prompt>jobs\n"
"[1]   Running        okular book.opensuse.startup-xep.pdf &amp;\n"
"[2]-  Running        okular book.opensuse.reference-xep.pdf &amp;\n"
"[3]+  Stopped        man jobs"
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:1722
msgid ""
"To bring a job to the foreground again, enter <command>fg "
"<replaceable>JOB_NUMBER</replaceable></command>."
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:1727
msgid ""
"Whereas <command>job</command> only shows the background processes started "
"from a specific shell, the <command>ps</command> command (run without "
"options) shows a list of all your processes—those you started. Find an "
"example output below:"
msgstr ""

#. (itstool) path: sect1/screen
#: xml/newbie_bash.xml:1734
#, no-wrap
msgid ""
"<prompt>tux &gt; </prompt>ps\n"
"PID TTY          TIME CMD\n"
"15500 pts/1    00:00:00 bash\n"
"28214 pts/1    00:00:00 okular\n"
"30187 pts/1    00:00:00 kwrite\n"
"30280 pts/1    00:00:00 ps"
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:1741
msgid ""
"In case a program cannot be terminated in the normal way, use the "
"<command>kill</command> command to stop the process (or processes) belonging "
"to that program. To do so, specify the process ID (PID) shown by the output "
"of <command>ps</command>. For example, to shut down the KWrite editor in the "
"example above, enter"
msgstr ""

#. (itstool) path: sect1/screen
#: xml/newbie_bash.xml:1749
#, no-wrap
msgid "<prompt>tux &gt; </prompt>kill 30187"
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:1751
msgid ""
"This sends a <emphasis>TERM</emphasis> signal that instructs the program to "
"shut itself down."
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:1756
msgid ""
"Alternatively, if the program or process you want to terminate is a "
"background job and is shown by the <command>jobs</command> command, you can "
"also use the <command>kill</command> command in combination with the job "
"number to terminate this process. When identifying the job with the job "
"number, you must prefix the number with a percent character (<literal>%</"
"literal>):"
msgstr ""

#. (itstool) path: sect1/screen
#: xml/newbie_bash.xml:1765
#, no-wrap
msgid "<prompt>tux &gt; </prompt>kill %<replaceable>JOB_NUMBER</replaceable>"
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:1767
msgid ""
"If <command>kill</command> does not help—as is sometimes the case for "
"<quote>runaway</quote> programs—try"
msgstr ""

#. (itstool) path: sect1/screen
#: xml/newbie_bash.xml:1772
#, no-wrap
msgid "<prompt>tux &gt; </prompt>kill -9 <replaceable>PID</replaceable>"
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:1774
msgid ""
"This sends a <emphasis>KILL</emphasis> signal instead of a <emphasis>TERM</"
"emphasis> signal, usually bringing the specified process to an end."
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:1780
msgid ""
"This section is intended to introduce the most basic set of commands for "
"handling jobs and processes. Find an overview for system administrators in "
"<xref linkend=\"sec.util.processes\"/>."
msgstr ""

#. (itstool) path: sect1/title
#: xml/newbie_bash.xml:1788
msgid "Archives and Data Compression"
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:1789
msgid ""
"On Linux, there are two types of commands that make data easier to transfer:"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:1795
msgid ""
"Archivers, which create a big file out of several smaller ones. The most "
"commonly used archiver is <command>tar</command>, another example is "
"<command>cpio</command>."
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:1802
msgid ""
"Compressors, which losslessly make a file smaller. The most commonly used "
"compressors are <command>gzip</command> and <command>bzip2</command>."
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:1809
msgid ""
"When combining these two types of commands, their effect is comparable to "
"the compressed archive files that are prevalent on other operating systems, "
"for example, <filename>ZIP</filename> or <filename>RAR</filename>."
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:1814
msgid ""
"To pack the <filename>test</filename> directory with all its files and "
"subdirectories into an archive named <filename>testarchive.tar</filename>, "
"do the following:"
msgstr ""

#. (itstool) path: procedure/title
#: xml/newbie_bash.xml:1820
msgid "Archiving Files"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1822
msgid "Open a shell."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1827
msgid ""
"Use <command>cd</command> to change to your home directory where the "
"<filename>test</filename> directory is located."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1833
msgid "Commpress the file with:"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:1836
#, no-wrap
msgid "<prompt>tux &gt; </prompt>tar -cvf testarchive.tar test"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1837
msgid ""
"The <option>-c</option> option creates the archive, making it a file as "
"directed by <option>-f</option>. The <option>-v</option> option lists the "
"files as they are processed."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1843
msgid ""
"The <filename>test</filename> directory with all its files and directories "
"has remained unchanged on your hard disk."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1849
msgid "View the contents of the archive file with:"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:1852
#, no-wrap
msgid "<prompt>tux &gt; </prompt>tar -tf testarchive.tar"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1855
msgid "To unpack the archive, use:"
msgstr ""

#. (itstool) path: step/screen
#. (itstool) path: listitem/screen
#: xml/newbie_bash.xml:1858 xml/newbie_bash.xml:1911
#, no-wrap
msgid "<prompt>tux &gt; </prompt>tar -xvf testarchive.tar"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1859
msgid ""
"If files in your current directory are named the same as the files in the "
"archive, they will be overwritten without warning."
msgstr ""

#. (itstool) path: sect1/para
#: xml/newbie_bash.xml:1866
msgid ""
"To compress files, use <command>gzip</command> or, for better compression, "
"<command>bzip2</command>."
msgstr ""

#. (itstool) path: procedure/title
#: xml/newbie_bash.xml:1871
msgid "Compressing a File"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1873
msgid ""
"For this example, reuse the archive <filename>testarchive.tar</filename> "
"from <xref linkend=\"pro.bash.archive\"/>."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1878
msgid "To compress the archive, use:"
msgstr ""

#. (itstool) path: step/screen
#: xml/newbie_bash.xml:1881
#, no-wrap
msgid "<prompt>tux &gt; </prompt>gzip testarchive.tar"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1882
msgid ""
"With <command>ls</command>, now see that the file <filename>testarchive.tar</"
"filename> is no longer there and that the file <filename>testarchive.tar.gz</"
"filename> has been created instead."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1887
msgid ""
"As an alternative, use <command>bzip2 testarchive.tar</command> which works "
"analogously but provides somewhat better compression."
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1893
msgid "Now decompress and unarchive the file again:"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:1898
msgid ""
"This can be done in two steps by first decompressing and then unarchiving "
"the file:"
msgstr ""

#. (itstool) path: listitem/screen
#: xml/newbie_bash.xml:1902
#, no-wrap
msgid ""
"\n"
"<prompt>tux &gt; </prompt><command>gzip --decompress testarchive.tar.gz</command>\n"
"<prompt>tux &gt; </prompt><command>tar -xvf testarchive.tar</command>\n"
msgstr ""

#. (itstool) path: listitem/para
#: xml/newbie_bash.xml:1908
msgid "You can also decompress and unarchive in one step:"
msgstr ""

#. (itstool) path: step/para
#: xml/newbie_bash.xml:1914
msgid ""
"With <command>ls</command>, you can see that a new <filename>test</filename> "
"directory has been created with the same contents as your <filename>test</"
"filename> directory in your home directory."
msgstr ""
